% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/newsimpleLoess.R
\name{newsimpleLoess}
\alias{newsimpleLoess}
\title{Spatially Local Polynomial Regression Fitting}
\usage{
newsimpleLoess(y, x, weights, span = 0.05, degree = 2L,
  distance = "Latlong", parametric = FALSE, drop.square = FALSE,
  normalize = TRUE, statistics = "approximate", surface = "interpolate",
  cell = 0.2, iterations = 1L, trace.hat = "exact")
}
\arguments{
\item{formula}{FORMULA DESCRIPTION. DO THIS FOR EACH ONE}
}
\description{
The second layer of the Spatial locally weighted regression. It calls the computation engine 
functions wrote in C and Fortran. Notice, it has to be called by spaloess function, do not
call itself.
}
\details{
Fitting is done locally.  That is, for the fit at point x, the fit is made using points in 
     a neighborhood of x, weighted by their distance from x (with differences in 'parametric' 
     variables being ignored when computing the distance).  The size of the neighborhood is 
     controlled by alpha (set by 'span' or 'enp.target').  For alpha < 1, the neighborhood includes
     proportion alpha of the points, and these have tricubic weighting (proportional to 
     (1 - (dist/maxdist)^3)^3).  For alpha > 1, all points are used, with the 'maximum distance' 
     assumed to be alpha^(1/p) times the actual maximum distance for p explanatory variables. For 
     the default family, fitting is by (weighted) least squares. For 'family="symmetric"' a few 
     iterations of an M-estimation procedure with Tukey's bi-weight are used.  Be aware that as the
     initial value is the least-squares fit, this need not be a very resistant fit. It can be 
     important to tune the control list to achieve acceptable speed.  See 'loess.control' for details.
}
\examples{
    set.seed(66)
    x1 <- rnorm(100, mean=-100, sd=10)
    x2 <- rnorm(100, mean=38, sd=4)
    y <- 0.1*x1 + 1*x2 - 10 + rnorm(100, 0, 1.3)
    testdata <- data.frame(LON = x1, LAT = x2, tmax = y)
    #names(testdata)[1:2] <- c("x1", "x2")
    #names(testdata)[1:2] <- c("LON","LAT")
    cars.lo <- spaloess(tmax ~ LON + LAT, testdata, distance = "Latlong")
}
\author{
Xiaosu Tong, based on 'loess' function of B. D. Ripley, and 'cloess' package of Cleveland,
    Grosse and Shyu.
}

